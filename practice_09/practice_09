{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1wiw9ZOuQcBOsKP49jlHobbHmpmke1Znk","timestamp":1718795486329}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 実践9\n","data-analysis-basic-kadaiリポジトリへpractice_09フォルダを作成し以下格納する。"],"metadata":{"id":"QNxf0HKeylWL"}},{"cell_type":"markdown","source":["## 実践9-1\n","* 以下のサンプルデータを作成してください。\n","```\n","data = {\n","    'name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace', 'Heidi', 'Ivan', 'Julia', 'Kevin', 'Liam', 'Maya', 'Noah'],\n","    'age': [25, 30, 35, 40, 28, None, 32, 22, 45, 37, 51, 24, 29, None],\n","    'city': ['New York', 'London', 'Paris', 'Tokyo', 'Berlin', 'Moscow', 'Sydney', 'New York', 'London', 'Paris', 'Tokyo', 'Berlin', 'Moscow', 'Sydney'],\n","    'score': [85, 92, 88, 75, 90, 82, None, 79, 95, 68, 81, 72, 87, 63]\n","}\n","```\n","* 以下の前処理（含む可視化）を実施してください\n","    * サンプルデータ(name, age, city, score)を作成\n","    * データの確認(先頭行、データ型など)\n","    * 欠損値の確認と除外\n","    * 年齢の外れ値(25歳未満、45歳超)の除外\n","    * スコアの平均を計算し、新しい列に追加\n","    * 都市ごとのスコアの平均を計算\n","    * 年齢とスコアの関係を散布図で可視化\n","    * 都市ごとのスコアの分布を棒グラフで可視化\n","\n","\n"],"metadata":{"id":"1ytJzbKNyz0J"}},{"cell_type":"code","source":["import pandas as pd\n","\n","# サンプルデータの作成\n","data = {\n","  'name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace', 'Heidi', 'Ivan', 'Julia', 'Kevin', 'Liam', 'Maya', 'Noah'],\n","  'age': [25, 30, 35, 40, 28, None, 32, 22, 45, 37, 51, 24, 29, None],\n","  'city': ['New York', 'London', 'Paris', 'Tokyo', 'Berlin', 'Moscow', 'Sydney', 'New York', 'London', 'Paris', 'Tokyo', 'Berlin', 'Moscow', 'Sydney'],\n","  'score': [85, 92, 88, 75, 90, 82, None, 79, 95, 68, 81, 72, 87, 63]\n","}\n","\n","# データの確認\n","df = pd.DataFrame(data)\n","print(df.info())\n","display(df.head())\n","display(df.tail())\n","display(df.describe())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":887},"id":"ePsz-Y0qGy7t","executionInfo":{"status":"ok","timestamp":1719228264349,"user_tz":-540,"elapsed":1176,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"ddd662f1-94b6-4e82-ad6f-0839960a30f8"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 14 entries, 0 to 13\n","Data columns (total 4 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   name    14 non-null     object \n"," 1   age     12 non-null     float64\n"," 2   city    14 non-null     object \n"," 3   score   13 non-null     float64\n","dtypes: float64(2), object(2)\n","memory usage: 576.0+ bytes\n","None\n"]},{"output_type":"display_data","data":{"text/plain":["      name   age      city  score\n","0    Alice  25.0  New York   85.0\n","1      Bob  30.0    London   92.0\n","2  Charlie  35.0     Paris   88.0\n","3    David  40.0     Tokyo   75.0\n","4      Eve  28.0    Berlin   90.0"],"text/html":["\n","  <div id=\"df-2db5a551-a2ae-4a4b-93a5-35c55e7b63d2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Alice</td>\n","      <td>25.0</td>\n","      <td>New York</td>\n","      <td>85.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bob</td>\n","      <td>30.0</td>\n","      <td>London</td>\n","      <td>92.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Charlie</td>\n","      <td>35.0</td>\n","      <td>Paris</td>\n","      <td>88.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>David</td>\n","      <td>40.0</td>\n","      <td>Tokyo</td>\n","      <td>75.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Eve</td>\n","      <td>28.0</td>\n","      <td>Berlin</td>\n","      <td>90.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2db5a551-a2ae-4a4b-93a5-35c55e7b63d2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2db5a551-a2ae-4a4b-93a5-35c55e7b63d2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2db5a551-a2ae-4a4b-93a5-35c55e7b63d2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a0ed841d-30a8-4f96-83a7-ef85f3aab4be\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a0ed841d-30a8-4f96-83a7-ef85f3aab4be')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a0ed841d-30a8-4f96-83a7-ef85f3aab4be button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Bob\",\n          \"Eve\",\n          \"Charlie\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.941380311005179,\n        \"min\": 25.0,\n        \"max\": 40.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          30.0,\n          28.0,\n          35.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"London\",\n          \"Berlin\",\n          \"Paris\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.670832032063167,\n        \"min\": 75.0,\n        \"max\": 92.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          92.0,\n          90.0,\n          88.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["     name   age    city  score\n","9   Julia  37.0   Paris   68.0\n","10  Kevin  51.0   Tokyo   81.0\n","11   Liam  24.0  Berlin   72.0\n","12   Maya  29.0  Moscow   87.0\n","13   Noah   NaN  Sydney   63.0"],"text/html":["\n","  <div id=\"df-4ea8dfd9-bd1f-4cc7-84c8-d103cf137653\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9</th>\n","      <td>Julia</td>\n","      <td>37.0</td>\n","      <td>Paris</td>\n","      <td>68.0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Kevin</td>\n","      <td>51.0</td>\n","      <td>Tokyo</td>\n","      <td>81.0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Liam</td>\n","      <td>24.0</td>\n","      <td>Berlin</td>\n","      <td>72.0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Maya</td>\n","      <td>29.0</td>\n","      <td>Moscow</td>\n","      <td>87.0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Noah</td>\n","      <td>NaN</td>\n","      <td>Sydney</td>\n","      <td>63.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ea8dfd9-bd1f-4cc7-84c8-d103cf137653')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4ea8dfd9-bd1f-4cc7-84c8-d103cf137653 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4ea8dfd9-bd1f-4cc7-84c8-d103cf137653');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b5190fa1-ea90-4f2c-a7fe-d955fe479f7b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b5190fa1-ea90-4f2c-a7fe-d955fe479f7b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b5190fa1-ea90-4f2c-a7fe-d955fe479f7b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Kevin\",\n          \"Noah\",\n          \"Liam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.786291472158096,\n        \"min\": 24.0,\n        \"max\": 51.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          51.0,\n          29.0,\n          37.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Tokyo\",\n          \"Sydney\",\n          \"Berlin\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.731392500562292,\n        \"min\": 63.0,\n        \"max\": 87.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          81.0,\n          63.0,\n          72.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["             age      score\n","count  12.000000  13.000000\n","mean   33.166667  81.307692\n","std     8.809430   9.629682\n","min    22.000000  63.000000\n","25%    27.250000  75.000000\n","50%    31.000000  82.000000\n","75%    37.750000  88.000000\n","max    51.000000  95.000000"],"text/html":["\n","  <div id=\"df-32c30e84-3e05-4d40-bbe5-5eb20836d86d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>12.000000</td>\n","      <td>13.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>33.166667</td>\n","      <td>81.307692</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>8.809430</td>\n","      <td>9.629682</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>22.000000</td>\n","      <td>63.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>27.250000</td>\n","      <td>75.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>31.000000</td>\n","      <td>82.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>37.750000</td>\n","      <td>88.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>51.000000</td>\n","      <td>95.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-32c30e84-3e05-4d40-bbe5-5eb20836d86d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-32c30e84-3e05-4d40-bbe5-5eb20836d86d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-32c30e84-3e05-4d40-bbe5-5eb20836d86d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7ed4f7ac-8ec5-4a09-becf-71734139f702\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7ed4f7ac-8ec5-4a09-becf-71734139f702')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7ed4f7ac-8ec5-4a09-becf-71734139f702 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.73455686605994,\n        \"min\": 8.809430208932959,\n        \"max\": 51.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          33.166666666666664,\n          31.0,\n          12.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 33.45889579473594,\n        \"min\": 9.629681678579475,\n        \"max\": 95.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          81.3076923076923,\n          82.0,\n          13.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["# 欠損値の確認\n","display(df[df.isnull().any(axis=1)])\n","print(f\"欠損値を含む{df.shape}\")\n","\n","# 欠損値を含む行を削除\n","df_not_null = df.dropna().copy()\n","print(f\"欠損値を削除{df_not_null.shape}\")"],"metadata":{"id":"xxMvNzQ7Hw0N","colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"status":"ok","timestamp":1719228264944,"user_tz":-540,"elapsed":597,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"4e827c70-3ad8-41da-b06f-18b2ca83da12"},"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/plain":["     name   age    city  score\n","5   Frank   NaN  Moscow   82.0\n","6   Grace  32.0  Sydney    NaN\n","13   Noah   NaN  Sydney   63.0"],"text/html":["\n","  <div id=\"df-cc04e528-24a0-4058-b2d6-38f256b9d0e5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>Frank</td>\n","      <td>NaN</td>\n","      <td>Moscow</td>\n","      <td>82.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Grace</td>\n","      <td>32.0</td>\n","      <td>Sydney</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Noah</td>\n","      <td>NaN</td>\n","      <td>Sydney</td>\n","      <td>63.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cc04e528-24a0-4058-b2d6-38f256b9d0e5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cc04e528-24a0-4058-b2d6-38f256b9d0e5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cc04e528-24a0-4058-b2d6-38f256b9d0e5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cf43d026-34f0-4264-95f7-ecf7e01fa2b5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cf43d026-34f0-4264-95f7-ecf7e01fa2b5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cf43d026-34f0-4264-95f7-ecf7e01fa2b5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"print(f\\\"\\u6b20\\u640d\\u5024\\u3092\\u524a\\u9664{df_not_null\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Frank\",\n          \"Grace\",\n          \"Noah\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 32.0,\n        \"max\": 32.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          32.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Sydney\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.435028842544403,\n        \"min\": 63.0,\n        \"max\": 82.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          63.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["欠損値を含む(14, 4)\n","欠損値を削除(11, 4)\n"]}]},{"cell_type":"code","source":["# 外れ値の除外\n","df_remove_outlier = df_not_null[(df_not_null['age'] >= 25) & (df_not_null['age'] <= 45)].copy()\n","display(df_remove_outlier.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"ZxgKIWjBB2cZ","executionInfo":{"status":"ok","timestamp":1719228264945,"user_tz":-540,"elapsed":6,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"73620d36-f5e7-4231-dbb3-bdbe9ee2b26e"},"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/plain":["(8, 4)"]},"metadata":{}}]},{"cell_type":"code","source":["# スコアの平均を計算し、新しい列を追加\n","df_remove_outlier['score_mean'] = df_remove_outlier['score'].mean()\n","display(df_remove_outlier)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"Dq6gT4r0FBsN","executionInfo":{"status":"ok","timestamp":1719228264945,"user_tz":-540,"elapsed":5,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"8992d61b-ade6-45d0-c741-07c879ee1c42"},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":["       name   age      city  score  score_mean\n","0     Alice  25.0  New York   85.0        85.0\n","1       Bob  30.0    London   92.0        85.0\n","2   Charlie  35.0     Paris   88.0        85.0\n","3     David  40.0     Tokyo   75.0        85.0\n","4       Eve  28.0    Berlin   90.0        85.0\n","8      Ivan  45.0    London   95.0        85.0\n","9     Julia  37.0     Paris   68.0        85.0\n","12     Maya  29.0    Moscow   87.0        85.0"],"text/html":["\n","  <div id=\"df-b6edbfc2-2d46-4d17-a70e-2312645f00e3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>score</th>\n","      <th>score_mean</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Alice</td>\n","      <td>25.0</td>\n","      <td>New York</td>\n","      <td>85.0</td>\n","      <td>85.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bob</td>\n","      <td>30.0</td>\n","      <td>London</td>\n","      <td>92.0</td>\n","      <td>85.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Charlie</td>\n","      <td>35.0</td>\n","      <td>Paris</td>\n","      <td>88.0</td>\n","      <td>85.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>David</td>\n","      <td>40.0</td>\n","      <td>Tokyo</td>\n","      <td>75.0</td>\n","      <td>85.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Eve</td>\n","      <td>28.0</td>\n","      <td>Berlin</td>\n","      <td>90.0</td>\n","      <td>85.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Ivan</td>\n","      <td>45.0</td>\n","      <td>London</td>\n","      <td>95.0</td>\n","      <td>85.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Julia</td>\n","      <td>37.0</td>\n","      <td>Paris</td>\n","      <td>68.0</td>\n","      <td>85.0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Maya</td>\n","      <td>29.0</td>\n","      <td>Moscow</td>\n","      <td>87.0</td>\n","      <td>85.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b6edbfc2-2d46-4d17-a70e-2312645f00e3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b6edbfc2-2d46-4d17-a70e-2312645f00e3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b6edbfc2-2d46-4d17-a70e-2312645f00e3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b7d7682a-ed98-4bf6-b02c-072f098f8563\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b7d7682a-ed98-4bf6-b02c-072f098f8563')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b7d7682a-ed98-4bf6-b02c-072f098f8563 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5913e1a9-2922-423e-b734-aab2c025586a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_remove_outlier')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5913e1a9-2922-423e-b734-aab2c025586a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_remove_outlier');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_remove_outlier","summary":"{\n  \"name\": \"df_remove_outlier\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Bob\",\n          \"Ivan\",\n          \"Alice\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.802048010919736,\n        \"min\": 25.0,\n        \"max\": 45.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          30.0,\n          45.0,\n          25.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"New York\",\n          \"London\",\n          \"Moscow\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.071147352221454,\n        \"min\": 68.0,\n        \"max\": 95.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          92.0,\n          95.0,\n          85.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score_mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 85.0,\n        \"max\": 85.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          85.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["# 都市ごとのスコアの平均を計算\n","city_mean = df_remove_outlier.groupby('city')['score'].mean()\n","df_remove_outlier['city_mean'] = df_remove_outlier.groupby('city')['score'].transform('mean')\n","display(city_mean)\n","display(df_remove_outlier)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":439},"id":"3bK2apDnCIAB","executionInfo":{"status":"ok","timestamp":1719228264945,"user_tz":-540,"elapsed":5,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"f9348b2b-6a51-4ef1-ae53-24b78aaa3374"},"execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/plain":["city\n","Berlin      90.0\n","London      93.5\n","Moscow      87.0\n","New York    85.0\n","Paris       78.0\n","Tokyo       75.0\n","Name: score, dtype: float64"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["       name   age      city  score  score_mean  city_mean\n","0     Alice  25.0  New York   85.0        85.0       85.0\n","1       Bob  30.0    London   92.0        85.0       93.5\n","2   Charlie  35.0     Paris   88.0        85.0       78.0\n","3     David  40.0     Tokyo   75.0        85.0       75.0\n","4       Eve  28.0    Berlin   90.0        85.0       90.0\n","8      Ivan  45.0    London   95.0        85.0       93.5\n","9     Julia  37.0     Paris   68.0        85.0       78.0\n","12     Maya  29.0    Moscow   87.0        85.0       87.0"],"text/html":["\n","  <div id=\"df-89ff2ac9-346a-4c3e-bf46-bf1d9bc40962\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>score</th>\n","      <th>score_mean</th>\n","      <th>city_mean</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Alice</td>\n","      <td>25.0</td>\n","      <td>New York</td>\n","      <td>85.0</td>\n","      <td>85.0</td>\n","      <td>85.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bob</td>\n","      <td>30.0</td>\n","      <td>London</td>\n","      <td>92.0</td>\n","      <td>85.0</td>\n","      <td>93.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Charlie</td>\n","      <td>35.0</td>\n","      <td>Paris</td>\n","      <td>88.0</td>\n","      <td>85.0</td>\n","      <td>78.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>David</td>\n","      <td>40.0</td>\n","      <td>Tokyo</td>\n","      <td>75.0</td>\n","      <td>85.0</td>\n","      <td>75.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Eve</td>\n","      <td>28.0</td>\n","      <td>Berlin</td>\n","      <td>90.0</td>\n","      <td>85.0</td>\n","      <td>90.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Ivan</td>\n","      <td>45.0</td>\n","      <td>London</td>\n","      <td>95.0</td>\n","      <td>85.0</td>\n","      <td>93.5</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Julia</td>\n","      <td>37.0</td>\n","      <td>Paris</td>\n","      <td>68.0</td>\n","      <td>85.0</td>\n","      <td>78.0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Maya</td>\n","      <td>29.0</td>\n","      <td>Moscow</td>\n","      <td>87.0</td>\n","      <td>85.0</td>\n","      <td>87.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89ff2ac9-346a-4c3e-bf46-bf1d9bc40962')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-89ff2ac9-346a-4c3e-bf46-bf1d9bc40962 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-89ff2ac9-346a-4c3e-bf46-bf1d9bc40962');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-05861bff-5ba9-47c6-9713-3e6c92d2a98e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-05861bff-5ba9-47c6-9713-3e6c92d2a98e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-05861bff-5ba9-47c6-9713-3e6c92d2a98e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_632813f4-07ab-4c32-9706-e7298d1d566e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_remove_outlier')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_632813f4-07ab-4c32-9706-e7298d1d566e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_remove_outlier');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_remove_outlier","summary":"{\n  \"name\": \"df_remove_outlier\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"Bob\",\n          \"Ivan\",\n          \"Alice\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.802048010919736,\n        \"min\": 25.0,\n        \"max\": 45.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          30.0,\n          45.0,\n          25.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"New York\",\n          \"London\",\n          \"Moscow\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.071147352221454,\n        \"min\": 68.0,\n        \"max\": 95.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          92.0,\n          95.0,\n          85.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score_mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 85.0,\n        \"max\": 85.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          85.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city_mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.285013971944637,\n        \"min\": 75.0,\n        \"max\": 93.5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          85.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["import seaborn as sns\n","# 年齢とスコアの関係を散布図で可視化\n","sns.scatterplot(x='age', y='score', data=df_remove_outlier)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"Va5DVTQrLlBL","executionInfo":{"status":"ok","timestamp":1719228266738,"user_tz":-540,"elapsed":1797,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"68678e0b-990e-4e61-b4d3-33d3a2741b16"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='age', ylabel='score'>"]},"metadata":{},"execution_count":6},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# 都市ごとのスコアの分布を棒グラフで可視化\n","sns.barplot(x='city', y='city_mean',data=df_remove_outlier)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"PQRWR4OjMeif","executionInfo":{"status":"ok","timestamp":1719228267380,"user_tz":-540,"elapsed":644,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"c2f18fa3-a558-4a07-af12-84546640b62a"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='city', ylabel='city_mean'>"]},"metadata":{},"execution_count":7},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## 実践9-2(応用)\n","* seabornのtipsデータをロードしてください。\n","```\n","import seaborn as sns\n","# データセットのロード\n","tips = sns.load_dataset(\"tips\")\n","```\n","    * total_bill: 会計総額\n","    * tip: 支払われたチップ\n","    * sex: 支払い主の性別\n","    * smoker: 喫煙者かどうか\n","    * day: 来店日(Sun, Sat, Thur, Fri)\n","    * time: 時間帯(Dinner, Lunch)\n","    * size: 同伴者の人数\n","* このデータの特徴を確認して説明してください。(基礎分析)\n","* 外れ値がないか確認してください。\n","* チップの割合(%)を新しい列として作成してください\n","* \"smoker\"カラムを機械学習に適した値(1 or 0) に変換してください。\n","* dayカラムの型を確認し、category型に変換してください。(ヒント: astypeを利用する)\n","* チップの割合の分布を可視化してください。その際、可能ならseabornを利用してください。\n","* sns.catplot(棒グラフ)を使ってチップの割合以外を可視化してください。\n","* 何かしら不要と思われる列を削除してください。\n","\n"],"metadata":{"id":"1SQw9k26zQVi"}},{"cell_type":"code","source":["pip install japanize-matplotlib"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jFxE0wNmrviN","executionInfo":{"status":"ok","timestamp":1719228283532,"user_tz":-540,"elapsed":16154,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"b38c4528-2b10-47b1-ae7e-c7d48f6226bb"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: japanize-matplotlib in /usr/local/lib/python3.10/dist-packages (1.1.3)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from japanize-matplotlib) (3.7.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (1.2.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (4.53.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (1.4.5)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (1.25.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (24.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (3.1.2)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->japanize-matplotlib) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->japanize-matplotlib) (1.16.0)\n"]}]},{"cell_type":"code","source":["import seaborn as sns\n","import pandas as pd\n","import japanize_matplotlib\n","# データセットのロード\n","tips = sns.load_dataset(\"tips\")"],"metadata":{"id":"-YmHKQUioWM_","executionInfo":{"status":"ok","timestamp":1719228283532,"user_tz":-540,"elapsed":6,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# データの確認\n","display(tips.head())\n","display(tips.info())\n","display(tips.describe())\n","tips.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":767},"id":"nCB6dM8MonoU","executionInfo":{"status":"ok","timestamp":1719228283532,"user_tz":-540,"elapsed":6,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"a8d80b71-c17f-4d2b-bb8d-0f7c87379e35"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["   total_bill   tip     sex smoker  day    time  size\n","0       16.99  1.01  Female     No  Sun  Dinner     2\n","1       10.34  1.66    Male     No  Sun  Dinner     3\n","2       21.01  3.50    Male     No  Sun  Dinner     3\n","3       23.68  3.31    Male     No  Sun  Dinner     2\n","4       24.59  3.61  Female     No  Sun  Dinner     4"],"text/html":["\n","  <div id=\"df-69e87698-103b-46ea-b43a-0df81b763805\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>total_bill</th>\n","      <th>tip</th>\n","      <th>sex</th>\n","      <th>smoker</th>\n","      <th>day</th>\n","      <th>time</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>16.99</td>\n","      <td>1.01</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10.34</td>\n","      <td>1.66</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>21.01</td>\n","      <td>3.50</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.68</td>\n","      <td>3.31</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24.59</td>\n","      <td>3.61</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-69e87698-103b-46ea-b43a-0df81b763805')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-69e87698-103b-46ea-b43a-0df81b763805 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-69e87698-103b-46ea-b43a-0df81b763805');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-55abb1d5-b043-434a-8987-74403ce11269\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-55abb1d5-b043-434a-8987-74403ce11269')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-55abb1d5-b043-434a-8987-74403ce11269 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"tips\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"total_bill\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.824686257645128,\n        \"min\": 10.34,\n        \"max\": 24.59,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          10.34,\n          24.59,\n          21.01\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tip\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.198361381220206,\n        \"min\": 1.01,\n        \"max\": 3.61,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.66,\n          3.61,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"smoker\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Sun\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Dinner\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2,\n        \"max\": 4,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 244 entries, 0 to 243\n","Data columns (total 7 columns):\n"," #   Column      Non-Null Count  Dtype   \n","---  ------      --------------  -----   \n"," 0   total_bill  244 non-null    float64 \n"," 1   tip         244 non-null    float64 \n"," 2   sex         244 non-null    category\n"," 3   smoker      244 non-null    category\n"," 4   day         244 non-null    category\n"," 5   time        244 non-null    category\n"," 6   size        244 non-null    int64   \n","dtypes: category(4), float64(2), int64(1)\n","memory usage: 7.4 KB\n"]},{"output_type":"display_data","data":{"text/plain":["None"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["       total_bill         tip        size\n","count  244.000000  244.000000  244.000000\n","mean    19.785943    2.998279    2.569672\n","std      8.902412    1.383638    0.951100\n","min      3.070000    1.000000    1.000000\n","25%     13.347500    2.000000    2.000000\n","50%     17.795000    2.900000    2.000000\n","75%     24.127500    3.562500    3.000000\n","max     50.810000   10.000000    6.000000"],"text/html":["\n","  <div id=\"df-34fcd3da-d9d1-4770-b7e5-c8361644b36d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>total_bill</th>\n","      <th>tip</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>244.000000</td>\n","      <td>244.000000</td>\n","      <td>244.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>19.785943</td>\n","      <td>2.998279</td>\n","      <td>2.569672</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>8.902412</td>\n","      <td>1.383638</td>\n","      <td>0.951100</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>3.070000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>13.347500</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>17.795000</td>\n","      <td>2.900000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>24.127500</td>\n","      <td>3.562500</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>50.810000</td>\n","      <td>10.000000</td>\n","      <td>6.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-34fcd3da-d9d1-4770-b7e5-c8361644b36d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-34fcd3da-d9d1-4770-b7e5-c8361644b36d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-34fcd3da-d9d1-4770-b7e5-c8361644b36d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-31de2074-6b22-441d-a7ea-0879e7768b49\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-31de2074-6b22-441d-a7ea-0879e7768b49')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-31de2074-6b22-441d-a7ea-0879e7768b49 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"tips\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"total_bill\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 80.57800601480773,\n        \"min\": 3.07,\n        \"max\": 244.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          19.78594262295082,\n          17.795,\n          244.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tip\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 85.10953159599222,\n        \"min\": 1.0,\n        \"max\": 244.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.99827868852459,\n          2.9,\n          244.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 85.39686221774683,\n        \"min\": 0.9510998047322344,\n        \"max\": 244.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          244.0,\n          2.569672131147541,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["(244, 7)"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["\"\"\"\n","各カラムのデータ数は244個あり、欠損値は存在しない\n","total_billのデータ形式はfloat64であり、平均値は19.785943、標準偏差は8.902412である。\n","tipのデータ形式はfloat64であり、平均値は2.998279、標準偏差は1.383638である。\n","sizeのデータ形式はint64であり、平均値は2.569672、標準偏差は0.951100である。\n","その他の、sex, smoker, day, timeについてはカテゴリー型で格納されている。\n","\"\"\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"fBgaHHrZovH5","executionInfo":{"status":"ok","timestamp":1719228283532,"user_tz":-540,"elapsed":5,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"115f1d3f-1547-443f-c616-652eff39f0df"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n各カラムのデータ数は244個あり、欠損値は存在しない\\ntotal_billのデータ形式はfloat64であり、平均値は19.785943、標準偏差は8.902412である。\\ntipのデータ形式はfloat64であり、平均値は2.998279、標準偏差は1.383638である。\\nsizeのデータ形式はint64であり、平均値は2.569672、標準偏差は0.951100である。\\nその他の、sex, smoker, day, timeについてはカテゴリー型で格納されている。\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# 外れ値の確認\n","tips.hist(bins=30)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":502},"id":"-nkEIabYqN5x","executionInfo":{"status":"ok","timestamp":1719228285566,"user_tz":-540,"elapsed":2037,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"e0428224-9e78-4d7f-9bb6-53e0b4b2a28b"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<Axes: title={'center': 'total_bill'}>,\n","        <Axes: title={'center': 'tip'}>],\n","       [<Axes: title={'center': 'size'}>, <Axes: >]], dtype=object)"]},"metadata":{},"execution_count":12},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 4 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.stripplot(x='total_bill', data=tips)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":464},"id":"etbXfTiiqGem","executionInfo":{"status":"ok","timestamp":1719228285566,"user_tz":-540,"elapsed":3,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"5ec64d0d-dc2b-479d-a421-9dcc212c8dd1"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='total_bill'>"]},"metadata":{},"execution_count":13},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.stripplot(x='tip', data=tips)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":464},"id":"EGe_d9BVsbTh","executionInfo":{"status":"ok","timestamp":1719228286185,"user_tz":-540,"elapsed":621,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"ae6e9255-9089-4f53-d6e7-65938a50a9c6"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='tip'>"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.stripplot(x='size', data=tips)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":464},"id":"v-Q6aqfMsuxy","executionInfo":{"status":"ok","timestamp":1719228286793,"user_tz":-540,"elapsed":609,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"feaa465e-0991-4bad-cc3e-35817855c620"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='size'>"]},"metadata":{},"execution_count":15},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# チップ割合のカラムを追加\n","tips['tip_rate(%)'] = tips['tip'] / tips['total_bill'] *100\n","display(tips.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"KKpjOXurs42g","executionInfo":{"status":"ok","timestamp":1719228286793,"user_tz":-540,"elapsed":7,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"f9675a3e-7542-4da4-f1e0-7ac19e0873b3"},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":["   total_bill   tip     sex smoker  day    time  size  tip_rate(%)\n","0       16.99  1.01  Female     No  Sun  Dinner     2     5.944673\n","1       10.34  1.66    Male     No  Sun  Dinner     3    16.054159\n","2       21.01  3.50    Male     No  Sun  Dinner     3    16.658734\n","3       23.68  3.31    Male     No  Sun  Dinner     2    13.978041\n","4       24.59  3.61  Female     No  Sun  Dinner     4    14.680765"],"text/html":["\n","  <div id=\"df-a2b8d1d9-39ea-4cd5-8b25-420fa4c3c3df\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>total_bill</th>\n","      <th>tip</th>\n","      <th>sex</th>\n","      <th>smoker</th>\n","      <th>day</th>\n","      <th>time</th>\n","      <th>size</th>\n","      <th>tip_rate(%)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>16.99</td>\n","      <td>1.01</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","      <td>5.944673</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10.34</td>\n","      <td>1.66</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","      <td>16.054159</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>21.01</td>\n","      <td>3.50</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","      <td>16.658734</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.68</td>\n","      <td>3.31</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","      <td>13.978041</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24.59</td>\n","      <td>3.61</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>4</td>\n","      <td>14.680765</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a2b8d1d9-39ea-4cd5-8b25-420fa4c3c3df')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a2b8d1d9-39ea-4cd5-8b25-420fa4c3c3df button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a2b8d1d9-39ea-4cd5-8b25-420fa4c3c3df');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-de45cf8f-9460-4cda-acf8-ac1dcc906ad2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-de45cf8f-9460-4cda-acf8-ac1dcc906ad2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-de45cf8f-9460-4cda-acf8-ac1dcc906ad2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(tips\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"total_bill\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.824686257645128,\n        \"min\": 10.34,\n        \"max\": 24.59,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          10.34,\n          24.59,\n          21.01\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tip\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.198361381220206,\n        \"min\": 1.01,\n        \"max\": 3.61,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.66,\n          3.61,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"smoker\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Sun\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Dinner\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2,\n        \"max\": 4,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tip_rate(%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.335904489861936,\n        \"min\": 5.9446733372572105,\n        \"max\": 16.658733936220845,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          16.054158607350097\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["# smokerカラムが取り得る値を確認\n","display(tips['smoker'].unique())\n","\n","# 変換用の関数を定義\n","def convert_num(x):\n","    if x == \"Yes\":\n","        return 1\n","    else:\n","        return 0\n","\n","# smokerカラムの変換\n","tips['smoker'] = tips['smoker'].apply(convert_num)\n","display(tips)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"ruA2lwcatiOe","executionInfo":{"status":"ok","timestamp":1719228286793,"user_tz":-540,"elapsed":6,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"d5beeb27-6299-4dbb-f659-bc0027404673"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":["['No', 'Yes']\n","Categories (2, object): ['Yes', 'No']"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["     total_bill   tip     sex smoker   day    time  size  tip_rate(%)\n","0         16.99  1.01  Female      0   Sun  Dinner     2     5.944673\n","1         10.34  1.66    Male      0   Sun  Dinner     3    16.054159\n","2         21.01  3.50    Male      0   Sun  Dinner     3    16.658734\n","3         23.68  3.31    Male      0   Sun  Dinner     2    13.978041\n","4         24.59  3.61  Female      0   Sun  Dinner     4    14.680765\n","..          ...   ...     ...    ...   ...     ...   ...          ...\n","239       29.03  5.92    Male      0   Sat  Dinner     3    20.392697\n","240       27.18  2.00  Female      1   Sat  Dinner     2     7.358352\n","241       22.67  2.00    Male      1   Sat  Dinner     2     8.822232\n","242       17.82  1.75    Male      0   Sat  Dinner     2     9.820426\n","243       18.78  3.00  Female      0  Thur  Dinner     2    15.974441\n","\n","[244 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-c4fcd2ea-21de-4f47-bc09-7f02881743ea\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>total_bill</th>\n","      <th>tip</th>\n","      <th>sex</th>\n","      <th>smoker</th>\n","      <th>day</th>\n","      <th>time</th>\n","      <th>size</th>\n","      <th>tip_rate(%)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>16.99</td>\n","      <td>1.01</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","      <td>5.944673</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10.34</td>\n","      <td>1.66</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","      <td>16.054159</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>21.01</td>\n","      <td>3.50</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","      <td>16.658734</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.68</td>\n","      <td>3.31</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","      <td>13.978041</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24.59</td>\n","      <td>3.61</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>4</td>\n","      <td>14.680765</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>239</th>\n","      <td>29.03</td>\n","      <td>5.92</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Sat</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","      <td>20.392697</td>\n","    </tr>\n","    <tr>\n","      <th>240</th>\n","      <td>27.18</td>\n","      <td>2.00</td>\n","      <td>Female</td>\n","      <td>1</td>\n","      <td>Sat</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","      <td>7.358352</td>\n","    </tr>\n","    <tr>\n","      <th>241</th>\n","      <td>22.67</td>\n","      <td>2.00</td>\n","      <td>Male</td>\n","      <td>1</td>\n","      <td>Sat</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","      <td>8.822232</td>\n","    </tr>\n","    <tr>\n","      <th>242</th>\n","      <td>17.82</td>\n","      <td>1.75</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Sat</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","      <td>9.820426</td>\n","    </tr>\n","    <tr>\n","      <th>243</th>\n","      <td>18.78</td>\n","      <td>3.00</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Thur</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","      <td>15.974441</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>244 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4fcd2ea-21de-4f47-bc09-7f02881743ea')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c4fcd2ea-21de-4f47-bc09-7f02881743ea button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c4fcd2ea-21de-4f47-bc09-7f02881743ea');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ce581cb0-6f25-4841-9ef6-96a89dbaabc1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ce581cb0-6f25-4841-9ef6-96a89dbaabc1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ce581cb0-6f25-4841-9ef6-96a89dbaabc1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_82053b27-fb50-4cbf-a251-8fe1ce99bfb5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('tips')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_82053b27-fb50-4cbf-a251-8fe1ce99bfb5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('tips');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"tips","summary":"{\n  \"name\": \"tips\",\n  \"rows\": 244,\n  \"fields\": [\n    {\n      \"column\": \"total_bill\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.902411954856856,\n        \"min\": 3.07,\n        \"max\": 50.81,\n        \"num_unique_values\": 229,\n        \"samples\": [\n          22.12,\n          20.23,\n          14.78\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tip\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3836381890011822,\n        \"min\": 1.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 123,\n        \"samples\": [\n          3.35,\n          1.5,\n          6.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"smoker\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Sat\",\n          \"Fri\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Lunch\",\n          \"Dinner\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tip_rate(%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.107220419157192,\n        \"min\": 3.563813585135547,\n        \"max\": 71.0344827586207,\n        \"num_unique_values\": 241,\n        \"samples\": [\n          16.044399596367306,\n          22.80501710376283\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["# dayカラムの型を確認後、category型に変換\n","print(tips['day'].dtype)\n","tips['day'] = tips['day'].astype('category')\n","display(tips.dtypes)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":191},"id":"yBU00_tuxJ4i","executionInfo":{"status":"ok","timestamp":1719228286793,"user_tz":-540,"elapsed":5,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"10a48228-6d96-4083-9dd8-7eac7648d502"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["category\n"]},{"output_type":"display_data","data":{"text/plain":["total_bill      float64\n","tip             float64\n","sex            category\n","smoker         category\n","day            category\n","time           category\n","size              int64\n","tip_rate(%)     float64\n","dtype: object"]},"metadata":{}}]},{"cell_type":"code","source":["# tipの割合分布をグラフ化\n","sns.histplot(tips['tip_rate(%)'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":465},"id":"6iDif8hL09xn","executionInfo":{"status":"ok","timestamp":1719228287260,"user_tz":-540,"elapsed":471,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"ab20590d-fde4-4837-9adc-5f91518687bf"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='tip_rate(%)', ylabel='Count'>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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F/v27bNGjx5tRUdHW4mJidaKFSvq/cMcSr3IzMy0evToYfl8vgZzwdoHnmINAACMxDUxAADASIQYAABgJEIMAAAwEiEGAAAYiRADAACMRIgBAABGIsQAAAAjEWIAhLQLFy40a7+vfj399evXdenSpbYqCUAzEWIAfGNut1u7du2yu4wWe+mll/TMM89IkvLz8zVy5EjFxsYqLS1NdXV19fZNS0vT6dOnJUlFRUWaNm2aqqurb3vNAL5EiAHQYtu2bdP69ev9r4uKijR9+nTb6vnv//5vLViwoEVrysrKtGjRIq1atUqStHDhQi1YsECFhYX65JNP9F//9V/+fTds2KAxY8YoKSlJkpSYmKgf/vCH+s1vftN6vwSAFiPEAGix9957T1VVVXaX4ZeXl6eLFy+2aM369es1c+ZMdevWTZJ06tQppaSkKCwsTGPHjtWZM2ckSQcPHtSRI0f06KOP1ls/b948Pf/88/r8889b55cA0GKEGAAtsmzZMu3atUsbNmyQ2+3Wjh075HA4tG/fPknS+fPn5XA4lJubq1GjRqlPnz76/ve/rxMnTjT7+D/72c/04osvKjExUe+//74kaceOHbrzzjsVGxur7373u/roo48kSdu3b9eGDRu0a9cuud1urVy50l/HtGnT5Ha7lZiYqBUrVsjn8/l/zq5du5Samup/PXjwYP35z39WbW2tDh48qKFDh+rixYt66qmn9NxzzzWos1evXho5cqRycnIC6iOAVmD3EygBmCctLc1aunSp/7Uk689//rNlWV88OVuS9Z3vfMcqKCiwfD6flZGRYfXr18+qrKy85bGXLl1qjRkzxkpPT7dqa2sty7Ksv/zlL1ZcXJz10UcfWZZlWY899pg1atSoemu++kTqqqoqKz4+3nrkkUes69evWxcuXLBGjBhhrV+/3rKsL57i3LFjR+v69ev+NWfPnrXuueceq3///taCBQssn89nTZ061Tp27FiTtT711FPW3Llzb/k7AWgbnIkB0CbWrVun+Ph4dejQQStWrNC1a9e0e/fuZq09efKkVqxYoY4dO0qS7rzzTp07d05Dhw6V9MVFtv/3f//X5PrXX39dV69e1e9+9zuFh4crJiZGy5cv1+9//3tJUmlpqaKiohQeHu5fk5iYqH379uncuXP67W9/q2eeeUZTpkxRZGSk7rnnHiUmJuqxxx6r93NiYmJUWlrakrYAaEVhdhcAoH2Kj4/3/+/w8HAlJCTo/PnzzVp71113qUuXLv7XVVVVWr58uf74xz/K4/HI5/Optra2yfVFRUW6evWq7rjjDv9YXV2dqqqq5PV6VVdXpw4dmv5vuHfffVcFBQV6+umnNX36dM2aNUtpaWn60Y9+pLfeekuTJ0+WJIWFhd20DgBtizMxANrEVy94raurU0FBgfr169estTfOwNywYMEC7du3T7t27dKnn36qP/7xjzddP2DAAMXFxen8+fP+raCgQJcuXZLT6VSfPn106dIlWZbVYG1JSYnWrFmjjRs3SpJOnDih733vewoPD9eYMWP0l7/8xb9veXm5YmJimvU7AWh9hBgALda5c2eVlZWppqamybuUFixYoIsXL8qyLK1cuVLh4eGaOHFiQD+vqqpK/fr1U2JioqqqqrR27VpJ0rVr1+rVY1mWLl++rMmTJ6tjx4568skn/V9Sl5ubqxkzZkiS+vXrpx49ejS42Njn82nu3Ll69tln1alTJ0nSwIEDdejQIdXV1enIkSP+26wl6ejRoxo9enRAvxOAb44QA6DFZs2apTfeeENDhgzR//zP/zS5z09+8hPFxsbq3Xff1dtvv+2/nbmlnnnmGX3++eeKi4vTd77zHU2fPl1JSUn+O5SmTZum/Px8JSQk6I033lCnTp30pz/9SWfPntWAAQMUHx+vNWvW6Mknn5QkORwO3XfffdqzZ0+9n7N27Vo99NBD9T6GWrt2rbKysuR2uxUfH++/o+mvf/2r3nvvPU2aNCmg3wnAN+ewGjufCgABOn/+vBISEnTu3Dn179/f7nKadPr0aU2ZMkUnTpzwf3x17do1de7cuVnrt23bpkOHDmn79u1tWSaAm+BMDIDbavr06XK73Y1uJ0+evG11JCUladasWcrMzPSPNTfAXLp0Sdu2bdOaNWvaqjwAzcCZGACtypQzMTccOHBAY8eObdGa8vJyXbp0SYMGDWqjqgA0ByEGAAAYiY+TAACAkQgxAADASIQYAABgJEIMAAAwEiEGAAAYiRADAACMRIgBAABGIsQAAAAjEWIAAICR/h+wK+fS0PVQYQAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["# 棒グラフで可視化\n","sns.barplot(x=tips['day'], y=tips['total_bill'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":464},"id":"uFsp_L_W5zc5","executionInfo":{"status":"ok","timestamp":1719228287944,"user_tz":-540,"elapsed":686,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"47088c01-31e2-4454-da23-b7e4707baed8"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='day', ylabel='total_bill'>"]},"metadata":{},"execution_count":21},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# 不要と思われる列を削除\n","sns.pairplot(tips)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"kwaRWZ788v_f","executionInfo":{"status":"ok","timestamp":1719228301831,"user_tz":-540,"elapsed":13889,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"29efcc3b-c33e-4525-b061-83bfda5033c7"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.PairGrid at 0x7ba5b86b7e20>"]},"metadata":{},"execution_count":22},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 20 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["tips = tips.drop('size', axis=1)\n","display(tips.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"FsH5uEPd-5IE","executionInfo":{"status":"ok","timestamp":1719228301831,"user_tz":-540,"elapsed":4,"user":{"displayName":"Yuki Kobayashi","userId":"07906978381577735843"}},"outputId":"f9be96d0-05ba-4439-a336-6b8848f8defd"},"execution_count":23,"outputs":[{"output_type":"display_data","data":{"text/plain":["   total_bill   tip     sex smoker  day    time  tip_rate(%)\n","0       16.99  1.01  Female      0  Sun  Dinner     5.944673\n","1       10.34  1.66    Male      0  Sun  Dinner    16.054159\n","2       21.01  3.50    Male      0  Sun  Dinner    16.658734\n","3       23.68  3.31    Male      0  Sun  Dinner    13.978041\n","4       24.59  3.61  Female      0  Sun  Dinner    14.680765"],"text/html":["\n","  <div id=\"df-0613e39d-aae7-44c4-9ea6-2e3cac50b4eb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>total_bill</th>\n","      <th>tip</th>\n","      <th>sex</th>\n","      <th>smoker</th>\n","      <th>day</th>\n","      <th>time</th>\n","      <th>tip_rate(%)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>16.99</td>\n","      <td>1.01</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>5.944673</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10.34</td>\n","      <td>1.66</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>16.054159</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>21.01</td>\n","      <td>3.50</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>16.658734</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.68</td>\n","      <td>3.31</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>13.978041</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24.59</td>\n","      <td>3.61</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>14.680765</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0613e39d-aae7-44c4-9ea6-2e3cac50b4eb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0613e39d-aae7-44c4-9ea6-2e3cac50b4eb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0613e39d-aae7-44c4-9ea6-2e3cac50b4eb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dbc29a98-dab7-42a6-a279-a4c2f1f5315d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dbc29a98-dab7-42a6-a279-a4c2f1f5315d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dbc29a98-dab7-42a6-a279-a4c2f1f5315d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(tips\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"total_bill\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.824686257645128,\n        \"min\": 10.34,\n        \"max\": 24.59,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          10.34,\n          24.59,\n          21.01\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tip\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.198361381220206,\n        \"min\": 1.01,\n        \"max\": 3.61,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.66,\n          3.61,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"smoker\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Sun\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Dinner\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tip_rate(%)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.335904489861936,\n        \"min\": 5.9446733372572105,\n        \"max\": 16.658733936220845,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          16.054158607350097\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]}]}